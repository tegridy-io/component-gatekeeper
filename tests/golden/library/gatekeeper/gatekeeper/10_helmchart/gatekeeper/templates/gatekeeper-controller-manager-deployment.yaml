apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gatekeeper
    chart: gatekeeper
    control-plane: controller-manager
    gatekeeper.sh/operation: webhook
    gatekeeper.sh/system: 'yes'
    heritage: Helm
    release: gatekeeper
  name: gatekeeper-controller-manager
  namespace: syn-gatekeeper
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gatekeeper
      chart: gatekeeper
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: 'yes'
      heritage: Helm
      release: gatekeeper
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app: gatekeeper
        app.kubernetes.io/instance: gatekeeper
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gatekeeper
        app.kubernetes.io/version: 3.16.3
        chart: gatekeeper
        control-plane: controller-manager
        gatekeeper.sh/operation: webhook
        gatekeeper.sh/system: 'yes'
        helm.sh/chart: gatekeeper-3.16.3
        heritage: Helm
        release: gatekeeper
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: gatekeeper.sh/operation
                      operator: In
                      values:
                        - webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      automountServiceAccountToken: true
      containers:
        - args:
            - --port=8443
            - --health-addr=:9090
            - --prometheus-port=8888
            - --logtostderr
            - --log-denies=false
            - --emit-admission-events=false
            - --admission-events-involved-namespace=false
            - --log-level=INFO
            - --exempt-namespace=syn-gatekeeper
            - --operation=webhook
            - --enable-external-data=true
            - --enable-generator-resource-expansion=true
            - --log-mutations=false
            - --mutation-annotations=false
            - --disable-cert-rotation=false
            - --max-serving-threads=-1
            - --tls-min-version=1.3
            - --validating-webhook-configuration-name=gatekeeper-validating-webhook-configuration
            - --mutating-webhook-configuration-name=gatekeeper-mutating-webhook-configuration
            - --external-data-provider-response-cache-ttl=3m
            - --experimental-enable-k8s-native-validation=false
            - --vap-enforcement=GATEKEEPER_DEFAULT
            - --metrics-backend=prometheus
            - --operation=mutation-webhook
            - --disable-opa-builtin={http.send}
          command:
            - /manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CONTAINER_NAME
              value: manager
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: k8s.pod.name=$(POD_NAME),k8s.namespace.name=$(NAMESPACE),k8s.container.name=$(CONTAINER_NAME)
          image: openpolicyagent/gatekeeper:v3.16.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
            timeoutSeconds: 1
          name: manager
          ports:
            - containerPort: 8443
              name: webhook-server
              protocol: TCP
            - containerPort: 8888
              name: metrics
              protocol: TCP
            - containerPort: 9090
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 9090
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /certs
              name: cert
              readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: false
      imagePullSecrets: []
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 999
        supplementalGroups:
          - 999
      serviceAccountName: gatekeeper-admin
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: gatekeeper-webhook-server-cert
