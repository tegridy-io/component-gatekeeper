apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: '1'
  labels:
    app.kubernetes.io/instance: gatekeeper
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gatekeeper
    app.kubernetes.io/version: 3.16.3
    helm.sh/chart: gatekeeper-3.16.3
    heritage: Helm
    release: gatekeeper
  name: gatekeeper-admin-upgrade-crds
  namespace: syn-gatekeeper
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: '1'
  labels:
    app.kubernetes.io/instance: gatekeeper
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gatekeeper
    app.kubernetes.io/version: 3.16.3
    helm.sh/chart: gatekeeper-3.16.3
    heritage: Helm
    release: gatekeeper
  name: gatekeeper-admin-upgrade-crds
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: '1'
  labels:
    app.kubernetes.io/instance: gatekeeper
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gatekeeper
    app.kubernetes.io/version: 3.16.3
    helm.sh/chart: gatekeeper-3.16.3
    heritage: Helm
    release: gatekeeper
  name: gatekeeper-admin-upgrade-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gatekeeper-admin-upgrade-crds
subjects:
  - kind: ServiceAccount
    name: gatekeeper-admin-upgrade-crds
    namespace: syn-gatekeeper
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: '1'
  labels:
    app: gatekeeper
    app.kubernetes.io/instance: gatekeeper
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gatekeeper
    app.kubernetes.io/version: 3.16.3
    chart: gatekeeper
    gatekeeper.sh/system: 'yes'
    helm.sh/chart: gatekeeper-3.16.3
    heritage: Helm
    release: gatekeeper
  name: gatekeeper-update-crds-hook
  namespace: syn-gatekeeper
spec:
  backoffLimit: 3
  template:
    metadata:
      annotations: {}
      labels:
        app: gatekeeper
        app.kubernetes.io/instance: gatekeeper
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gatekeeper
        app.kubernetes.io/version: 3.16.3
        chart: gatekeeper
        gatekeeper.sh/system: 'yes'
        helm.sh/chart: gatekeeper-3.16.3
        heritage: Helm
        release: gatekeeper
      name: gatekeeper-update-crds-hook
    spec:
      affinity: {}
      containers:
        - args:
            - apply
            - -f
            - crds/
          image: openpolicyagent/gatekeeper-crds:v3.16.3
          imagePullPolicy: IfNotPresent
          name: crds-upgrade
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
      serviceAccountName: gatekeeper-admin-upgrade-crds
      tolerations: []
